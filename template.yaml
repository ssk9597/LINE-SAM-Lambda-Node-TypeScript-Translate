# AWS CloudFormationテンプレートのバージョン
AWSTemplateFormatVersion: '2010-09-09'
# CloudFormationではなくSAMを使うと明記する
Transform: AWS::Serverless-2016-10-31
# CloudFormationのスタックの説明文（重要ではないので適当でOK）
Description: >
  Translate

Globals:
  # Lambda関数のタイムアウト値（3秒に設定）
  Function:
    Timeout: 3

Resources:
  # API Gateway
  TranslateAPI:
    # Typeを指定する（今回はAPI Gateway）
    Type: AWS::Serverless::Api
    Properties:
      # ステージ名（APIのURLの最後にこのステージ名が付与されます）
      StageName: v1

  # DynamoDB
  TranslateDynamoDB:
    # Typeを指定する（今回はDynamoDB）
    Type: AWS::Serverless::SimpleTable
    Properties:
      # テーブルの名前
      TableName: translations
      # プライマリキーの設定（名前とプライマリキーのタイプ）
      PrimaryKey:
        Name: TimeStamp
        Type: String
      # プロビジョニングされたキャパシティの設定（今回の要件では最小の1でOK）
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

    # Lambda
  TranslateFunction:
    # Typeを指定する（今回はLambda）
    Type: AWS::Serverless::Function
    Properties:
      # 関数が格納されているディレクトリ（今回はコンパイル後なので、distディレクトリを使用する）
      CodeUri: api/dist
      # ファイル名と関数名（今回はファイル名がindex.js、関数名がexports.handlerなので、index.handlerとなります）
      Handler: index.handler
      # どの言語とどのバージョンを使用するか
      Runtime: nodejs12.x
      # ポリシーを付与する（今回はLambdaの権限とSSMの読み取り権限とDynamoDBのフルアクセス権限とAmazon translateのフルアクセス権限を付与）
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/TranslateFullAccess
      # この関数をトリガーするイベントを指定します
      Events:
        # API Gateway
        TranslateAPI:
          Type: Api
          Properties:
            # どのAPIを使用するか（!Refは値の参照に使用します）
            RestApiId: !Ref TranslateAPI
            # URL
            Path: /
            # POSTメソッド
            Method: post

Outputs:
  TranslateAPI:
    Description: 'API Gateway'
    # URLを作成（!Subは${}で値を指定することができます）
    Value: !Sub 'https://${WeatherFashionAPI}.execute-api.${AWS::Region}.amazonaws.com/v1'
  TranslateFunction:
    Description: 'Lambda'
    # ロールの値を返す
    Value: !GetAtt TranslateFunction.Arn
  TranslateFunctionIamRole:
    Description: 'IAM Role'
    # ロールの値を返す
    Value: !GetAtt TranslateFunctionRole.Arn
